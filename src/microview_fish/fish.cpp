#include <MicroView.h>

static uint8_t image_width = 64;
static uint8_t image_height = 48;

static uint8_t image_data[] = {
    0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b00000000, 0b00000000, 0b00011111, 0b10000000, 0b00000000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b00000000, 0b00011111, 0b10000000, 0b00000000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b00000000, 0b01100001, 0b10000000, 0b00000000, 0b00000000, 0b01111000,
    0b00000000, 0b00000000, 0b00000000, 0b01100001, 0b10000000, 0b00000000, 0b00000000, 0b01111000,
    0b00000000, 0b00000000, 0b00000001, 0b10000001, 0b10000000, 0b00000000, 0b00000001, 0b10011000,
    0b00000000, 0b00000000, 0b00000001, 0b10000001, 0b10000000, 0b00000000, 0b00000001, 0b10011000,
    0b00000000, 0b00000001, 0b11111111, 0b11111111, 0b11111110, 0b00000000, 0b00000110, 0b00011000,
    0b00000000, 0b00000001, 0b11111111, 0b11111111, 0b11111110, 0b00000000, 0b00000110, 0b00011000,
    0b00000000, 0b00011110, 0b00000000, 0b00000000, 0b00000001, 0b11100000, 0b00011000, 0b00011000,
    0b00000000, 0b00011110, 0b00000000, 0b00000000, 0b00000001, 0b11100000, 0b00011000, 0b00011000,
    0b00000001, 0b11100000, 0b00000000, 0b00000000, 0b00000000, 0b00011110, 0b01100000, 0b00011000,
    0b00000001, 0b11100000, 0b00000000, 0b00000000, 0b00000000, 0b00011110, 0b01100000, 0b00011000,
    0b00000110, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b10000000, 0b00011000,
    0b00000110, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b10000000, 0b00011000,
    0b00000110, 0b00000111, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000,
    0b00000110, 0b00000111, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000,
    0b00011000, 0b00000111, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000,
    0b00011000, 0b00000111, 0b10000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000,
    0b00011000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000,
    0b00011000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000,
    0b00011000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000,
    0b00011000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000,
    0b00000110, 0b00000000, 0b00011000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000,
    0b00000110, 0b00000000, 0b00011000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00011000,
    0b00000110, 0b00000000, 0b00011000, 0b00000000, 0b00000000, 0b00000001, 0b10000000, 0b00011000,
    0b00000110, 0b00000000, 0b00011000, 0b00000000, 0b00000000, 0b00000001, 0b10000000, 0b00011000,
    0b00000001, 0b11100001, 0b11100000, 0b00000000, 0b00000000, 0b00011110, 0b01100000, 0b00011000,
    0b00000001, 0b11100001, 0b11100000, 0b00000000, 0b00000000, 0b00011110, 0b01100000, 0b00011000,
    0b00000000, 0b00011110, 0b00000000, 0b00000000, 0b00000001, 0b11100000, 0b00011000, 0b00011000,
    0b00000000, 0b00011110, 0b00000000, 0b00000000, 0b00000001, 0b11100000, 0b00011000, 0b00011000,
    0b00000000, 0b00000001, 0b11111111, 0b11111111, 0b11111110, 0b00000000, 0b00000110, 0b00011000,
    0b00000000, 0b00000001, 0b11111111, 0b11111111, 0b11111110, 0b00000000, 0b00000110, 0b00011000,
    0b00000000, 0b00000000, 0b00000001, 0b10000001, 0b10000000, 0b00000000, 0b00000001, 0b10011000,
    0b00000000, 0b00000000, 0b00000001, 0b10000001, 0b10000000, 0b00000000, 0b00000001, 0b10011000,
    0b00000000, 0b00000000, 0b00000000, 0b01100001, 0b10000000, 0b00000000, 0b00000000, 0b01111000,
    0b00000000, 0b00000000, 0b00000000, 0b01100001, 0b10000000, 0b00000000, 0b00000000, 0b01111000,
    0b00000000, 0b00000000, 0b00000000, 0b00011111, 0b10000000, 0b00000000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b00000000, 0b00011111, 0b10000000, 0b00000000, 0b00000000, 0b00011000,
    0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
    0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
};

void setup() {
    uView.begin();
    uView.clear(PAGE);

    for (uint8_t y = 0; y < image_height; y++) {
        for (uint8_t x = 0; x < image_width; x++) {
            uint16_t pos  = y * (image_width/8) + x/(image_width/8);
            uint8_t mask = 1 << (7 - (x % 8));
            if ((image_data[pos] & mask) != 0) {
                uView.pixel(x, y);
            }
        }
    }

    uView.display();
}

void loop() {
}
